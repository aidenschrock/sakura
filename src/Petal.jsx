/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 petal.glb 
*/

import React, { useRef, useState } from "react";
import { useFrame, useThree } from "@react-three/fiber";
import { useGLTF, Instance, Instances } from "@react-three/drei";
import * as THREE from "three";

function Petal({ z, speed, ...props }) {
  const petal = useRef();
  const { viewport, camera } = useThree();
  const { width, height } = viewport.getCurrentViewport(camera, [0, 0, z]);
  const [data] = useState({
    x: THREE.MathUtils.randFloatSpread(2),
    y: THREE.MathUtils.randFloatSpread(height),
    rX: Math.random() * Math.PI,
    rY: Math.random() * Math.PI,
    rZ: Math.random() * Math.PI,
  });

  useFrame(() => {
    petal.current.rotation.set(
      (data.rX += 0.005),
      (data.rY += 0.002),
      (data.rZ += 0.007)
    );
    petal.current.position.set(data.x * width, (data.y += speed.current), z);
    if (data.y > height) {
      data.y = -height;
    }
  });
  return (
    <group {...props}>
      <Instance ref={petal} />
    </group>
  );
}

export default function Petals({ count = 40, speed }) {
  const { nodes, materials } = useGLTF("/petal.glb");

  return (
    <Instances
      count={count}
      geometry={nodes.SakuraHanaBira.geometry}
      material={materials.SakuraHanaBira}
    >
      {Array.from({ length: count }, (_, i) => (
        <Petal key={i} z={-(i / count) * 80 - 20} speed={speed} />
      ))}
    </Instances>
  );
}

useGLTF.preload("/petal.glb");
